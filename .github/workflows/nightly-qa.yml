
name: Nightly QA Tests

on:
  schedule:
    # Run every night at 2:00 AM Israel time (23:00 UTC)
    - cron: '0 23 * * *'
  workflow_dispatch: # Allow manual trigger

env:
  NODE_VERSION: '18'

jobs:
  nightly-qa:
    name: Nightly QA Suite
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    strategy:
      fail-fast: false
      matrix:
        test-suite:
          - basic-smoke
          - full-e2e
          - security-audit
          - performance-check
          
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Check if tests are configured
        id: check_tests
        run: |
          if [ -d "tests" ] && [ -f "tests/package.json" ]; then
            echo "tests_exist=true" >> $GITHUB_OUTPUT
          else
            echo "tests_exist=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Install test dependencies
        if: steps.check_tests.outputs.tests_exist == 'true'
        run: |
          cd tests
          npm ci
          
      - name: Install Playwright browsers
        if: steps.check_tests.outputs.tests_exist == 'true'
        run: |
          cd tests
          npx playwright install --with-deps chromium firefox
          
      - name: Run Basic Smoke Tests
        if: matrix.test-suite == 'basic-smoke' && steps.check_tests.outputs.tests_exist == 'true'
        run: |
          cd tests
          npm run test:smoke || echo "Smoke tests not configured"
        env:
          BASE_URL: 'http://localhost:5173'
          
      - name: Run Full E2E Tests
        if: matrix.test-suite == 'full-e2e' && steps.check_tests.outputs.tests_exist == 'true'
        run: |
          cd tests
          npm test -- --project=desktop-chrome
        env:
          BASE_URL: 'http://localhost:5173'
          
      - name: Run Security Audit
        if: matrix.test-suite == 'security-audit'
        run: |
          echo "🔒 Running security audit..."
          npm audit --audit-level=moderate || echo "Security issues found"
          
      - name: Run Performance Check
        if: matrix.test-suite == 'performance-check' && steps.check_tests.outputs.tests_exist == 'true'
        run: |
          cd tests
          npm run test:performance || echo "Performance tests not configured"
        env:
          BASE_URL: 'http://localhost:5173'
          
      - name: Skip tests (not configured)
        if: steps.check_tests.outputs.tests_exist == 'false'
        run: |
          echo "⚠️ Tests are not configured yet"
          echo "Test suite: ${{ matrix.test-suite }}"
          
      - name: Upload test artifacts
        if: always() && steps.check_tests.outputs.tests_exist == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: qa-results-${{ matrix.test-suite }}
          path: |
            tests/test-results/
            tests/playwright-report/
            tests/screenshots/
          retention-days: 7
          
  generate-report:
    name: Generate QA Report
    needs: nightly-qa
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: qa-artifacts
        continue-on-error: true
        
      - name: Generate QA Summary
        run: |
          echo "# 🌙 דוח QA לילי - $(date +'%d/%m/%Y %H:%M')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📊 סיכום בדיקות" >> $GITHUB_STEP_SUMMARY
          echo "| בדיקה | סטטוס | הערות |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|--------|" >> $GITHUB_STEP_SUMMARY
          
          # Check each test suite
          for suite in basic-smoke full-e2e security-audit performance-check; do
            if [ -d "qa-artifacts/qa-results-$suite" ]; then
              echo "| $suite | ✅ עבר | - |" >> $GITHUB_STEP_SUMMARY
            else
              echo "| $suite | ⚠️ דלג/נכשל | בדוק לוגים |" >> $GITHUB_STEP_SUMMARY
            fi
          done
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🔍 פרטים נוספים" >> $GITHUB_STEP_SUMMARY
          echo "- זמן ביצוע: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- קומיט: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- ענף: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          
          # Count artifacts
          artifact_count=$(find qa-artifacts -name "*.json" 2>/dev/null | wc -l)
          echo "- קבצי תוצאות: $artifact_count" >> $GITHUB_STEP_SUMMARY
          
      - name: Create Issue on Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = `🚨 בדיקת QA לילית נכשלה - ${new Date().toLocaleDateString('he-IL')}`;
            const body = `
            ## 🌙 דוח כשל בבדיקת QA לילית
            
            **זמן:** ${new Date().toLocaleString('he-IL')}
            **קומיט:** ${{ github.sha }}
            **ענף:** ${{ github.ref_name }}
            
            ### 🔍 מה קרה?
            הבדיקה האוטומטית שרצה בלילה נכשלה. יש לבדוק את הלוגים ולתקן.
            
            ### 📋 צעדים לבדיקה:
            - [ ] בדוק את לוגי הbuild
            - [ ] בדוק את בדיקות ה-E2E
            - [ ] בדוק את ביקורת האבטחה
            - [ ] בדוק את בדיקות הביצועים
            
            ### 🔗 קישורים
            - [Run Details](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - [Commit](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
            `;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['qa', 'nightly-failure', 'bug']
            });
            
  cleanup:
    name: Cleanup Old Artifacts
    needs: generate-report
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Delete old artifacts
        uses: actions/github-script@v7
        with:
          script: |
            const artifacts = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            const oldArtifacts = artifacts.data.artifacts.filter(artifact => {
              const created = new Date(artifact.created_at);
              const weekAgo = new Date();
              weekAgo.setDate(weekAgo.getDate() - 7);
              return created < weekAgo && artifact.name.startsWith('qa-results-');
            });
            
            for (const artifact of oldArtifacts) {
              await github.rest.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id,
              });
              console.log(`Deleted artifact: ${artifact.name}`);
            }
