
name: Manual QA Tests

on:
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of tests to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - smoke
          - e2e
          - security
          - performance
      browser:
        description: 'Browser to test'
        required: false
        default: 'desktop-chrome'
        type: choice
        options:
          - desktop-chrome
          - desktop-firefox
          - mobile-chrome
          - all-browsers

env:
  NODE_VERSION: '18'

jobs:
  manual-qa:
    name: Manual QA - ${{ inputs.test_type }}
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Check if tests exist
        id: check_tests
        run: |
          if [ -d "tests" ] && [ -f "tests/package.json" ]; then
            echo "tests_exist=true" >> $GITHUB_OUTPUT
          else
            echo "tests_exist=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Install test dependencies
        if: steps.check_tests.outputs.tests_exist == 'true'
        run: |
          cd tests
          npm ci
          
      - name: Install Playwright browsers
        if: steps.check_tests.outputs.tests_exist == 'true'
        run: |
          cd tests
          npx playwright install --with-deps chromium firefox
          
      - name: Run Smoke Tests
        if: (inputs.test_type == 'all' || inputs.test_type == 'smoke') && steps.check_tests.outputs.tests_exist == 'true'
        run: |
          cd tests
          npm run test:smoke || npm test -- --grep="@smoke"
        env:
          BASE_URL: 'http://localhost:5173'
          
      - name: Run E2E Tests
        if: (inputs.test_type == 'all' || inputs.test_type == 'e2e') && steps.check_tests.outputs.tests_exist == 'true'
        run: |
          cd tests
          if [ "${{ inputs.browser }}" = "all-browsers" ]; then
            npm test
          else
            npm test -- --project=${{ inputs.browser }}
          fi
        env:
          BASE_URL: 'http://localhost:5173'
          
      - name: Run Security Tests
        if: inputs.test_type == 'all' || inputs.test_type == 'security'
        run: |
          echo "🔒 Running security audit..."
          npm audit --audit-level=moderate
          
      - name: Run Performance Tests
        if: (inputs.test_type == 'all' || inputs.test_type == 'performance') && steps.check_tests.outputs.tests_exist == 'true'
        run: |
          cd tests
          npm run test:performance || echo "Performance tests not configured yet"
        env:
          BASE_URL: 'http://localhost:5173'
          
      - name: Generate Manual Test Report
        if: always()
        run: |
          echo "# 🧪 דוח בדיקה ידנית" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**סוג בדיקה:** ${{ inputs.test_type }}" >> $GITHUB_STEP_SUMMARY
          echo "**דפדפן:** ${{ inputs.browser }}" >> $GITHUB_STEP_SUMMARY
          echo "**זמן:** $(date +'%d/%m/%Y %H:%M')" >> $GITHUB_STEP_SUMMARY
          echo "**מבצע:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.check_tests.outputs.tests_exist }}" = "true" ]; then
            echo "✅ בדיקות הורצו בהצלחה" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ בדיקות לא מוגדרות עדיין" >> $GITHUB_STEP_SUMMARY
          fi
          
      - name: Upload test results
        if: always() && steps.check_tests.outputs.tests_exist == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: manual-qa-results-${{ inputs.test_type }}-${{ inputs.browser }}
          path: |
            tests/test-results/
            tests/playwright-report/
            tests/screenshots/
          retention-days: 3
