
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: 
      - main
  workflow_dispatch:

jobs:
  # Linting and Quality Checks
  quality_checks:
    name: Code Quality
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linting
        run: npm run lint
        continue-on-error: true

  # Build Job
  build:
    name: Build Project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: dist/

  # E2E Tests (only on main branch pushes)
  e2e_tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    strategy:
      fail-fast: false
      matrix:
        browser: [desktop-chrome]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: 'tests/package-lock.json'
          
      - name: Install dependencies
        run: |
          cd tests
          npm ci
          
      - name: Install Playwright Browsers
        run: |
          cd tests
          npx playwright install --with-deps chromium
          
      - name: Run E2E tests
        run: |
          cd tests
          npm test -- --project=${{ matrix.browser }}
        continue-on-error: true

  # Deploy (only on successful main branch builds)
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build, e2e_tests]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Deploy to production
        run: echo "Deployment step would go here"
